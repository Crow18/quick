{"ast":null,"code":"var _jsxFileName = \"/home/carl/Desktop/fun/src/App.js\";\nimport React, { useState } from 'react';\nimport List from './List';\nimport Search from './Search';\nconst stuff = [{\n  name: \"Carl\",\n  surname: \"Liguma\"\n}, {\n  name: \"Caydon\",\n  surname: \"Stoffels\"\n}, {\n  name: \"Marlin\",\n  surname: \"Segers\"\n}, {\n  name: \"Vincent\",\n  surname: \"Dalla\"\n}, {\n  name: \"Member\",\n  surname: \"Company\"\n}];\nexport default function App() {\n  const [SearchText, setSearchText] = useState('');\n\n  const handleSearch = e => {\n    var usertext = e.target.value;\n    setSearchText(usertext.toLowerCase());\n  };\n\n  function compare(a, b) {\n    const Alpha = a.name;\n    const Blpha = [...Alpha];\n    let comparison = Alpha > Bplha ? 1 : -1;\n    return comparison;\n  }\n\n  const filteredSearch = stuff.sort(compare).filter(searchlist => {\n    return searchlist.name.toLowerCase().includes(SearchText) || searchlist.surname.toLowerCase().includes(SearchText);\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Search, {\n    SearchThis: handleSearch,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(List, {\n    ListOfStuff: filteredSearch,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }));\n}","map":{"version":3,"sources":["/home/carl/Desktop/fun/src/App.js"],"names":["React","useState","List","Search","stuff","name","surname","App","SearchText","setSearchText","handleSearch","e","usertext","target","value","toLowerCase","compare","a","b","Alpha","Blpha","comparison","Bplha","filteredSearch","sort","filter","searchlist","includes"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAA+B,OAA/B;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AAGA,MAAMC,KAAK,GAAG,CAAC;AAACC,EAAAA,IAAI,EAAE,MAAP;AAAeC,EAAAA,OAAO,EAAE;AAAxB,CAAD,EAAoC;AAACD,EAAAA,IAAI,EAAE,QAAP;AAAiBC,EAAAA,OAAO,EAAE;AAA1B,CAApC,EAA2E;AAACD,EAAAA,IAAI,EAAE,QAAP;AAAiBC,EAAAA,OAAO,EAAE;AAA1B,CAA3E,EAAgH;AAACD,EAAAA,IAAI,EAAE,SAAP;AAAkBC,EAAAA,OAAO,EAAE;AAA3B,CAAhH,EAAqJ;AAACD,EAAAA,IAAI,EAAE,QAAP;AAAiBC,EAAAA,OAAO,EAAE;AAA1B,CAArJ,CAAd;AAIA,eAAe,SAASC,GAAT,GAAe;AAC1B,QAAM,CAAEC,UAAF,EAAcC,aAAd,IAAgCR,QAAQ,CAAC,EAAD,CAA9C;;AAEA,QAAMS,YAAY,GAAGC,CAAC,IAAI;AACtB,QAAIC,QAAQ,GAAGD,CAAC,CAACE,MAAF,CAASC,KAAxB;AACAL,IAAAA,aAAa,CAACG,QAAQ,CAACG,WAAT,EAAD,CAAb;AACH,GAHD;;AAKA,WAASC,OAAT,CAAiBC,CAAjB,EAAoBC,CAApB,EAAuB;AACnB,UAAMC,KAAK,GAAGF,CAAC,CAACZ,IAAhB;AACA,UAAMe,KAAK,GAAG,CAAC,GAAGD,KAAJ,CAAd;AAEA,QAAIE,UAAU,GAAIF,KAAK,GAAGG,KAAT,GAAkB,CAAlB,GAAsB,CAAC,CAAxC;AAEA,WAAOD,UAAP;AACD;;AAEH,QAAME,cAAc,GAAGnB,KAAK,CAACoB,IAAN,CAAWR,OAAX,EAAoBS,MAApB,CAA2BC,UAAU,IAAI;AAAC,WAC7DA,UAAU,CAACrB,IAAX,CAAgBU,WAAhB,GAA8BY,QAA9B,CAAuCnB,UAAvC,KAAsDkB,UAAU,CAACpB,OAAX,CAAmBS,WAAnB,GAAiCY,QAAjC,CAA0CnB,UAA1C,CADO;AAE3D,GAFiB,CAAvB;AAIA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,MAAD;AAAQ,IAAA,UAAU,EAAEE,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI,oBAAC,IAAD;AAAM,IAAA,WAAW,EAAEa,cAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ;AAMH","sourcesContent":["import React , {useState} from 'react';\nimport List from './List';\nimport Search from './Search';\n\n\nconst stuff = [{name: \"Carl\", surname: \"Liguma\"}, {name: \"Caydon\", surname: \"Stoffels\"}, {name: \"Marlin\", surname: \"Segers\"}, {name: \"Vincent\", surname: \"Dalla\"}, {name: \"Member\", surname: \"Company\"}];\n\n\n\nexport default function App() {\n    const [ SearchText, setSearchText ] = useState('');\n    \n    const handleSearch = e => {\n        var usertext = e.target.value;\n        setSearchText(usertext.toLowerCase());\n    }\n\n    function compare(a, b) {\n        const Alpha = a.name;\n        const Blpha = [...Alpha];\n      \n        let comparison = (Alpha > Bplha) ? 1 : -1;\n \n        return comparison;\n      }\n\n    const filteredSearch = stuff.sort(compare).filter(searchlist => {return(\n        searchlist.name.toLowerCase().includes(SearchText) || searchlist.surname.toLowerCase().includes(SearchText)\n        )});\n\n    return (\n        <div>\n            <Search SearchThis={handleSearch}/>\n            <List ListOfStuff={filteredSearch}/>\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}